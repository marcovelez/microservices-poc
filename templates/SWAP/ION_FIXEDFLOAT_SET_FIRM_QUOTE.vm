## PRODUCTS [IRS] FIX_FLOAT
## SENTINEL VERSION [0.16]
#set ($timeout_str = $!utils.getValueAt("timeout", false, false, -1, -1))
#set ($timeout = 90)
#if ($timeout_str)
	#set ($timeout = $timeout.parseInt($timeout_str) * 1000)
#end
#set ($sign = $!utils.getValueAt('direction', false, true, -1, -1))
#set ($quote_value = $!utils.getValueAt("price", false, true, -1 , -1))
{
    "traderId" : "$userId",
    "rfqId" : "$rfqId",
    "rfqVersion": $rfqVersionId,
    "counterpartyId": $!utils.getValueAt("glcsCode", true, true, -1, -1),##"1WBK",
    "quoteBody": {
####FixedFloatSingleCurrency
        #if ($sign == "Buy")
            "pay": 
            {
                "quoteQuoteConvention": {},
                "quoteFixedRateLeg1": {},
                "quoteFloatSpreadLeg2": {},

                "price": {
                    "value": $quote_value,
                    "isUserOverridden": true
                },
                "priceType": {},
                "quoteUpfrontPayment": {},
                "quoteUpfrontPaymentCcy": {
                    "value": "EUR"
                },
                "additionalTerms": {},
                "salesComment": {},
                "markitwireTraders": {},
                "santanderCounterparty": {}
            }
        #elseif ($sign == "Sell")
            "receive": {
                "quoteQuoteConvention": {},
                "quoteFixedRateLeg1": {},
                "quoteFloatSpreadLeg2": {},

                "price": {
                    "value": $quote_value,
                    "isUserOverridden": true
                },
                "priceType": {},
                "quoteUpfrontPayment": {},
                "quoteUpfrontPaymentCcy": {
                    "value": "EUR"
                },
                "additionalTerms": {},
                "salesComment": {},
                "markitwireTraders": {},
                "santanderCounterparty": {}
            }
        #else
            $utils.throwException("ERROR: Invalid value in ION 'direction' field.")
        #end
    },
    "ttlInMillis": $timeout 
    
     #if ($data.containsKey("priceFormation")) ## NEEDED BY API
        ,"attachments": [
            {
                "data": "$data["priceFormation"]"
            }
        ]
    #end
    
}
